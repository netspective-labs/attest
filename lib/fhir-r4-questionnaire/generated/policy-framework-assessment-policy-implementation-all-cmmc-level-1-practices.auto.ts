/**
 * @file policy-framework-assessment-policy-implementation-all-cmmc-level-1-practices.auto.ts
 * @generated This file was auto-generated at 2025-08-17T01:00:18.929Z from the FHIR R4 Questionnaire "Policy Framework Assessment (Policy Implementation - All CMMC Level 1 Practices)".
 * Do not edit this file manually; re-run the generator if the source Questionnaire changes.
 * Profiles: http://hl7.org/fhir/4.0/StructureDefinition/Questionnaire
 *
 * Normalizes LHC JSON and FHIR QuestionnaireResponse into the type-safe `PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices` interface.
 */

// deno-lint-ignore no-explicit-any
type Any = any;
import {
  coerceOptionalString,
  findLhcValueByLinkId,
  findQrAnswerByLinkId,
  isBlank,
} from "../r4q-runtime.ts";
/**
 * Form Help (from display/help controls):
 * - Comprehensive assessment of your organization's policy management framework covering all CMMC Level 1 practices.
 * - Establish a formal process to create, review, and approve policies to ensure they align with organizational goals and compliance requirements.
 * - Implement regular procedures to review and update policies to keep them current and effective.
 * - Provide ongoing training to employees to ensure understanding and compliance with organizational policies.
 * - Regularly monitor and assess adherence to policies to identify gaps and enforce compliance.
 * - Establish a process to document, review, and approve exceptions to policies while managing associated risks.
 */
/** Map of normalized property names to their source `linkId`. */
export const PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesLinkIds =
  {
    whoIsResponsibleForDevelopingAndApprovingCmmcRelatedPolicies:
      "527949557496",
    howFrequentlyAreCmmcRelatedPoliciesReviewedAndUpdated: "992068463537",
    whatTrainingIsProvidedToEmployeesOnCmmcRelatedPolicies: "472951321809",
    howIsComplianceWithCmmcRelatedPoliciesMonitored: "758349008850",
    howAreExceptionsToCmmcRelatedPoliciesManaged: "255836550808",
    additionalNotes: "795388091631",
  } as const;

/** Normalized view of "Policy Framework Assessment (Policy Implementation - All CMMC Level 1 Practices)" answers. */
export interface PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices {
  /**
   * Who is responsible for developing and approving CMMC-related policies?
   * linkId: 527949557496
   * FHIR type: choice
   * Section: Policy Development and Approval
   * Options: "Chief Information Officer", "Chief Information Security Officer", "Chief Executive Officer", "Legal/Compliance Department", "IT Security Team"
   * Required: no
   */
  whoIsResponsibleForDevelopingAndApprovingCmmcRelatedPolicies?:
    | "Chief Information Officer"
    | "Chief Information Security Officer"
    | "Chief Executive Officer"
    | "Legal/Compliance Department"
    | "IT Security Team";

  /**
   * How frequently are CMMC-related policies reviewed and updated?
   * linkId: 992068463537
   * FHIR type: choice
   * Section: Policy Review and Update Procedures
   * Options: "Quarterly", "Bi-annually", "Annually", "When regulations change", "No formal schedule"
   * Required: no
   */
  howFrequentlyAreCmmcRelatedPoliciesReviewedAndUpdated?:
    | "Quarterly"
    | "Bi-annually"
    | "Annually"
    | "When regulations change"
    | "No formal schedule";

  /**
   * What training is provided to employees on CMMC-related policies?
   * linkId: 472951321809
   * FHIR type: choice
   * Section: Employee Training on Policies
   * Options: "Initial security awareness training", "Role-specific policy training", "Annual refresher training", "just-in-time training for policy changes", "No formal training program"
   * Required: no
   */
  whatTrainingIsProvidedToEmployeesOnCmmcRelatedPolicies?:
    | "Initial security awareness training"
    | "Role-specific policy training"
    | "Annual refresher training"
    | "just-in-time training for policy changes"
    | "No formal training program";

  /**
   * How is compliance with CMMC-related policies monitored?
   * linkId: 758349008850
   * FHIR type: choice
   * Section: Policy Compliance Monitoring
   * Options: " Regular internal audits", "Automated compliance monitoring", "Self-assessment questionnaires", "Manager reviews and attestations", "Third-party assessments"
   * Required: no
   */
  howIsComplianceWithCmmcRelatedPoliciesMonitored?:
    | " Regular internal audits"
    | "Automated compliance monitoring"
    | "Self-assessment questionnaires"
    | "Manager reviews and attestations"
    | "Third-party assessments";

  /**
   * How are exceptions to CMMC-related policies managed?
   * linkId: 255836550808
   * FHIR type: choice
   * Section: Policy Exception Management
   * Options: " Formal exception request process", "Risk assessment for exceptions", "Compensating controls for exceptions", "Regular review of approved exceptions", "No formal exception process"
   * Required: no
   */
  howAreExceptionsToCmmcRelatedPoliciesManaged?:
    | " Formal exception request process"
    | "Risk assessment for exceptions"
    | "Compensating controls for exceptions"
    | "Regular review of approved exceptions"
    | "No formal exception process";

  /**
   * Additional Notes
   * linkId: 795388091631
   * FHIR type: text
   * Entry format: Any additional information about your policy framework.
   * Required: no
   */
  additionalNotes?: string;
}

/** Convert an LHC JSON response into a normalized PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices object. */
export function policyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesLhcFormResponseAdapter(
  input: Any,
): PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices {
  return {
    whoIsResponsibleForDevelopingAndApprovingCmmcRelatedPolicies:
      coerceOptionalString(findLhcValueByLinkId(input, "527949557496")),
    howFrequentlyAreCmmcRelatedPoliciesReviewedAndUpdated: coerceOptionalString(
      findLhcValueByLinkId(input, "992068463537"),
    ),
    whatTrainingIsProvidedToEmployeesOnCmmcRelatedPolicies:
      coerceOptionalString(findLhcValueByLinkId(input, "472951321809")),
    howIsComplianceWithCmmcRelatedPoliciesMonitored: coerceOptionalString(
      findLhcValueByLinkId(input, "758349008850"),
    ),
    howAreExceptionsToCmmcRelatedPoliciesManaged: coerceOptionalString(
      findLhcValueByLinkId(input, "255836550808"),
    ),
    additionalNotes: coerceOptionalString(
      findLhcValueByLinkId(input, "795388091631"),
    ),
  };
}

/** Convert a FHIR QuestionnaireResponse into a normalized PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices object. */
export function policyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesFhirQuestionnaireResponseAdapter(
  qr: Any,
): PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices {
  return {
    whoIsResponsibleForDevelopingAndApprovingCmmcRelatedPolicies:
      coerceOptionalString(findQrAnswerByLinkId(qr, "527949557496")),
    howFrequentlyAreCmmcRelatedPoliciesReviewedAndUpdated: coerceOptionalString(
      findQrAnswerByLinkId(qr, "992068463537"),
    ),
    whatTrainingIsProvidedToEmployeesOnCmmcRelatedPolicies:
      coerceOptionalString(findQrAnswerByLinkId(qr, "472951321809")),
    howIsComplianceWithCmmcRelatedPoliciesMonitored: coerceOptionalString(
      findQrAnswerByLinkId(qr, "758349008850"),
    ),
    howAreExceptionsToCmmcRelatedPoliciesManaged: coerceOptionalString(
      findQrAnswerByLinkId(qr, "255836550808"),
    ),
    additionalNotes: coerceOptionalString(
      findQrAnswerByLinkId(qr, "795388091631"),
    ),
  };
}

/** High-level interpreter with factories, validation, and readiness scoring. */
export class PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesInterpreter {
  constructor(
    readonly value:
      PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices,
  ) {}

  /** Factory: build from LHC JSON. */
  static fromLhcFormResponse(
    input: Any,
  ): PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesInterpreter {
    return new PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesInterpreter(
      policyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesLhcFormResponseAdapter(
        input,
      ),
    );
  }

  /** Factory: build from FHIR QuestionnaireResponse. */
  static fromQuestionnaireResponse(
    qr: Any,
  ): PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesInterpreter {
    return new PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesInterpreter(
      policyFrameworkAssessmentPolicyImplementationAllCmmcLevel1PracticesFhirQuestionnaireResponseAdapter(
        qr,
      ),
    );
  }

  /** Check required fields and report any missing or blank. */
  validateRequiredFields(): {
    ok: boolean;
    missing: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    >;
  } {
    const missing: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    > = [];
    const req: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    > = [];
    for (const k of req) {
      const v = (this.value as Any)[k];
      if (isBlank(v)) missing.push(k);
    }
    return { ok: missing.length === 0, missing };
  }

  /**
   * Assess readiness with a simple completeness score. This is meant to be
   * used to help understand how complete the types are and serves as an
   * example of how to use the generated code.
   * - requiredCovered: percentage of required fields that are non-blank
   * - overallFilled: count of non-blank fields among all known properties
   */
  assessReadiness(): {
    formTitle: string;
    requiredCovered: number; // 0..1
    totalRequired: number;
    totalFilled: number;
    totalFields: number;
    missingRequired: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    >;
  } {
    const req: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    > = [];
    const all: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    > = [
      "whoIsResponsibleForDevelopingAndApprovingCmmcRelatedPolicies",
      "howFrequentlyAreCmmcRelatedPoliciesReviewedAndUpdated",
      "whatTrainingIsProvidedToEmployeesOnCmmcRelatedPolicies",
      "howIsComplianceWithCmmcRelatedPoliciesMonitored",
      "howAreExceptionsToCmmcRelatedPoliciesManaged",
      "additionalNotes",
    ];

    let reqFilled = 0;
    const missingReq: Array<
      keyof PolicyFrameworkAssessmentPolicyImplementationAllCmmcLevel1Practices
    > = [];
    for (const k of req) {
      const v = (this.value as Any)[k];
      if (!isBlank(v)) reqFilled++;
      else missingReq.push(k);
    }

    let totalFilled = 0;
    for (const k of all) {
      if (!isBlank((this.value as Any)[k])) totalFilled++;
    }

    return {
      formTitle:
        "Policy Framework Assessment (Policy Implementation - All CMMC Level 1 Practices)",
      requiredCovered: req.length ? reqFilled / req.length : 1,
      totalRequired: req.length,
      totalFilled,
      totalFields: all.length,
      missingRequired: missingReq,
    };
  }
}
